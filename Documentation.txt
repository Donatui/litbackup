This file contains info how to install, run and configure LitBackup. If
you are looking for an explanation what this is all about please see
"README.txt"


INSTALLATION STEPS

1.) Extract/git clone/download all "litbackup" files to a server

2.) Place all files at the exact locations as shown:

	"etc" - contains files to be placed in /etc
	"opt" - contains files to be placed in /opt (duh!)


3.) Use the directory "example-flavour" as a default flavour - the configuration set for a particular group of servers. Only simple characters allowed.

4.) Look through the configuration files in a flavour:
	4.1) "main.cfg" -  main configuration file. You will probably just leave default 
         values. The ones to change are: BACKUPROOT, DIRSTOBACKUP, SSH* and NUMOF*
         options.

	4.2) "backup-excludes.cfg" - rsync-style exclude list to ignore

	4.3) "no-recursion.cfg" - if some dirs are frequently changing you can add them 
	here to speed up rsync. Keep in mind that new files in these will be ignored. 
	Usually best for shared hosting, where dirs with 100s of domains or users force a 	full tree scan. 

5.) Add different flavours for each server group if necessary. Each group can contain it's own backup settings, SSH keys, etc.

6.) Edit /etc/litbackup/cron.cfg (all parameters explained in .cfg itself) 

7.) Edit /etc/litbackup/servers.cfg - add hostnames and specify flavours for each of them. If no flavour is specified the default one is used. Keep in mind that hostname is where rsync connects, so make sure it is resolvable or enter it's IP

6.) Add a cron job to run at 20 minutes intervals. You can run it as frequently as you like.

	*/20 * * * * root /opt/litbackup/cron.sh > /dev/null



At first, you need to edit "/opt/litbackup/example.com/config/main.cfg".
Main parameters for a quick launch:

SERVER="example.com" - resolvable server address and a server's backup directory.
It needs to accept SSH connections. Usually this is the only variable You change
while adding new servers.

BACKUPROOT="/mnt/largefs" - where all backups stored (not just this server)

DIRSTOBACKUP=":/var :/home" - "rsync" syntax. ":/" backups everything.

SSHPRIVATEKEY="/etc/ssh/ssh_host_rsa_key" - ssh key to use while connecting

Please feel free to check other configuration variables - they are explained in "main.cf"

After scripts are there - add a cron job to run:
-------------------------
35 00 * * * root /opt/litbackup/example.com/backup.sh > /dev/null
00 09 * * * root /opt/litbackup/example.com/rotate-backups.sh > /dev/null
-------------------------

As you can see - I recommend backing up during the night and doing the rotation stuff
during the day.

That's it! During the first run the script will do a full rsync copy, so it may take
a while, but other runs will be very fast. The scripts are self-maintaining, so You don't
need to clean anything.

One more thing - there is some issues in combination with "rsync", file
permisions and hard links. If files are hard linked together this leads
to a situation when after chmod()'ing or chown()'ing a file in source
server "rsync" updates the permissions to the same file in ALL backups.
This is a drawback - hard links to the same file MUST have same file
permissions and owners. "main.cfg" has an option "BACKUPPERMISSIONS",
which enables backing up of file permissions to a separate file. It is
disabled by default. Who knows! Maybe it will save your day sometime.
Turn it on if You consider restoring only file permissions

You have been warned!


SCRIPTS

* backup.sh - does the actual backup
* rotate-backups.sh - creates hardlinks, removes old and compresses large files
* system/filelist-generator.sh - searches for modified files and directories on the remote
server. You don't need to configure it under normal conditions.
* find-compressed-backups.sh - if you use "COMPRESSFILES" option, than use this on the
directory you want to restore. It will extract large files "rotate-backups.sh" created.

CONFIGS

* main.cfg - name says it all. It is a shared config file. All scripts include it. Options
in "main.cf" are explained with comments. Feel free to tell me that something is unclear.
* backup-excludes.cfg - this file is given to "rsync --exclude-from". See "man rsync" for
syntax


